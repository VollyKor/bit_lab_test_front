[{"C:\\Projects\\React-base-config\\src\\index.js":"1","C:\\Projects\\React-base-config\\src\\App.js":"2","C:\\Projects\\bit_lab_test_front\\src\\index.jsx":"3","C:\\Projects\\bit_lab_test_front\\src\\components\\App.jsx":"4","C:\\Projects\\bit_lab_test_front\\src\\components\\Container.jsx":"5","C:\\Projects\\bit_lab_test_front\\src\\components\\Header.jsx":"6","C:\\Projects\\bit_lab_test_front\\src\\components\\Main.jsx":"7","C:\\Projects\\bit_lab_test_front\\src\\components\\MainTitle.jsx":"8","C:\\Projects\\bit_lab_test_front\\src\\components\\Products.jsx":"9","C:\\Projects\\bit_lab_test_front\\src\\components\\Form.jsx":"10","C:\\Projects\\bit_lab_test_front\\src\\components\\Footer.jsx":"11","C:\\Projects\\bit_lab_test_front\\src\\components\\StatsHeader.jsx":"12","C:\\Projects\\bit_lab_test_front\\src\\components\\StatsFooter.jsx":"13","C:\\Projects\\bit_lab_test_front\\src\\components\\NavBarStats.jsx":"14","C:\\Projects\\bit_lab_test_front\\src\\components\\StatsTable.jsx":"15","C:\\Projects\\bit_lab_test_front\\src\\service\\axios.js":"16","C:\\Projects\\bit_lab_test_front\\src\\components\\StatstableRow.jsx":"17","C:\\Projects\\bit_lab_test_front\\src\\components\\UserPage.jsx":"18"},{"size":234,"mtime":1617466424058,"results":"19","hashOfConfig":"20"},{"size":553,"mtime":1617466424057,"results":"21","hashOfConfig":"20"},{"size":295,"mtime":1618623699567,"results":"22","hashOfConfig":"23"},{"size":1269,"mtime":1618566728069,"results":"24","hashOfConfig":"23"},{"size":109,"mtime":1618413096391,"results":"25","hashOfConfig":"23"},{"size":231,"mtime":1618415302597,"results":"26","hashOfConfig":"23"},{"size":590,"mtime":1618430825976,"results":"27","hashOfConfig":"23"},{"size":583,"mtime":1618625292424,"results":"28","hashOfConfig":"23"},{"size":1831,"mtime":1618427480358,"results":"29","hashOfConfig":"23"},{"size":323,"mtime":1618428703388,"results":"30","hashOfConfig":"23"},{"size":373,"mtime":1618619385332,"results":"31","hashOfConfig":"23"},{"size":305,"mtime":1618434103243,"results":"32","hashOfConfig":"23"},{"size":493,"mtime":1618619550880,"results":"33","hashOfConfig":"23"},{"size":1413,"mtime":1618625027769,"results":"34","hashOfConfig":"23"},{"size":2600,"mtime":1618625102198,"results":"35","hashOfConfig":"23"},{"size":785,"mtime":1618641476753,"results":"36","hashOfConfig":"23"},{"size":981,"mtime":1618624589265,"results":"37","hashOfConfig":"23"},{"size":4572,"mtime":1618624623809,"results":"38","hashOfConfig":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mkk6rv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dd746c",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\Projects\\React-base-config\\src\\index.js",[],"C:\\Projects\\React-base-config\\src\\App.js",[],"C:\\Projects\\bit_lab_test_front\\src\\index.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\App.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\Container.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\Header.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\Main.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\MainTitle.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\Products.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\Form.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\Footer.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\StatsHeader.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\StatsFooter.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\NavBarStats.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\StatsTable.jsx",["77"],"import queryString from 'query-string';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as req from '../service/axios';\r\nimport StatsTableRow from './StatstableRow';\r\nimport { ReactComponent as Logo } from '../styles/images/arrow-pagination.svg';\r\n\r\nexport default function StatsTable() {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [page, setPage] = useState(-1);\r\n  const [data, setData] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const query = queryString.parse(history.location.search);\r\n  const { pathname } = history.location;\r\n  const { limit = 30 } = query;\r\n\r\n  const maxLimit = limit > 50 ? 50 : limit;\r\n\r\n  useEffect(() => {\r\n    if (page !== query.page) {\r\n      req.getAll(query.page, maxLimit).then(stats => {\r\n        setTotalPages(stats.totalPages);\r\n        setData(stats.data);\r\n        setPage(page);\r\n      });\r\n    }\r\n  }, [query.page]);\r\n\r\n  const HandleChange = ({ selected }) => {\r\n    setPage(selected + 1);\r\n    history.push(`${pathname}?page=${selected + 1}&limit=${limit}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"table__title\">Users statistics</h2>\r\n      <table className=\"table\">\r\n        <thead className=\"table__head\">\r\n          <tr className=\"table__head-row\">\r\n            <td className=\"table__head-cell id\">id</td>\r\n            <td className=\"table__head-cell\">First name</td>\r\n            <td className=\"table__head-cell\">Last name</td>\r\n            <td className=\"table__head-cell email\">Email</td>\r\n            <td className=\"table__head-cell gender\">Gender</td>\r\n            <td className=\"table__head-cell ip_address\">IP address</td>\r\n            <td className=\"table__head-cell\">Total clicks</td>\r\n            <td className=\"table__head-cell\">Total page views</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table__body\">\r\n          {data && <StatsTableRow data={data} />}\r\n        </tbody>\r\n      </table>\r\n      {query.page && (\r\n        <ReactPaginate\r\n          pageCount={totalPages}\r\n          pageRangeDisplayed={3}\r\n          marginPagesDisplayed={1}\r\n          initialPage={query.page - 1}\r\n          onPageChange={HandleChange}\r\n          containerClassName=\"paginate__container\"\r\n          pageClassName=\"paginate__page\"\r\n          activeClassName=\"paginate__page active\"\r\n          nextLabel={<Logo className=\"paginate_arrow right\" />}\r\n          previousLabel={<Logo className=\"paginate_arrow\" />}\r\n          breakClassName=\"paginate__page\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\bit_lab_test_front\\src\\service\\axios.js",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\StatstableRow.jsx",[],"C:\\Projects\\bit_lab_test_front\\src\\components\\UserPage.jsx",["78","79"],"import 'react-datepicker/dist/react-datepicker.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { getDataById, getDataByDate } from '../service/axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport axios from 'axios';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\n\r\n//  example of unvalid data\r\n// ====================================\r\n// axios\r\n//   .get('http://localhost:3010/stats/5?dateFrom=2010-10-01&dateTo=2019-10-3')\r\n//   .then(\r\n//     res => console.log('e', res),\r\n//     err => alert(`Message from server: ${err.response.data.message}`),\r\n//   );\r\n\r\nexport default function SinglePage() {\r\n  const [startDateFrom, setStartDateFrom] = useState(new Date());\r\n  const [startDateTo, setStartDateTo] = useState(new Date());\r\n  const [data, setData] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const match = useRouteMatch();\r\n\r\n  const { id = 1 } = match.params;\r\n  const numberId = Number(id);\r\n\r\n  function getFormattedData(dateObj) {\r\n    return dateObj.toISOString().substring(0, 10);\r\n  }\r\n\r\n  const GraphSize = () => {\r\n    const windowSize = window.innerWidth;\r\n\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    if (windowSize > 1180) {\r\n      width = 1000;\r\n      height = 400;\r\n    } else if (windowSize > 780) {\r\n      width = 600;\r\n      height = 200;\r\n    } else if (windowSize > 380) {\r\n      width = 300;\r\n      height = 150;\r\n    }\r\n\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(numberId)) {\r\n      getDataById(numberId)\r\n        .then(({ data }) => {\r\n          setStartDateFrom(new Date(data[0].date));\r\n          setStartDateTo(new Date(data[data.length - 1].date));\r\n\r\n          setData(data);\r\n          setUser(data[0]);\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n  }, [numberId]);\r\n\r\n  function handleClick() {\r\n    getDataByDate(\r\n      numberId,\r\n      getFormattedData(startDateFrom),\r\n      getFormattedData(startDateTo),\r\n    ).then(({ data }) => {\r\n      setData(data);\r\n    });\r\n  }\r\n\r\n  return user ? (\r\n    <>\r\n      <div className=\"date\">\r\n        <h2 className=\"user__title\">{`${user.first_name} ${user.last_name}`}</h2>\r\n        <div className=\"date__wrapper\">\r\n          <div>\r\n            <span className=\"date__desc\">From</span>\r\n            <DatePicker\r\n              closeOnScroll={true}\r\n              selected={startDateFrom}\r\n              selectsStart\r\n              className=\"date__input\"\r\n              onChange={date => {\r\n                setStartDateFrom(date);\r\n              }}\r\n              dateFormat=\"yyyy-MM-dd\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"date__desc\">to</span>\r\n            <DatePicker\r\n              closeOnScroll={true}\r\n              selected={startDateTo}\r\n              selectsEnd\r\n              onChange={date => {\r\n                setStartDateTo(date);\r\n              }}\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              className=\"date__input\"\r\n            />\r\n          </div>\r\n          <button className=\"date__btn\" onClick={handleClick}>\r\n            Filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"graph\">\r\n        <h3 className=\"user__subtitle\">Clicks</h3>\r\n        <LineChart\r\n          width={GraphSize().width}\r\n          height={GraphSize().height}\r\n          data={data}\r\n        >\r\n          <CartesianGrid vertical={false} stroke=\"#F1F1F1\" />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"clicks\"\r\n            strokeWidth={4}\r\n            stroke=\"#3A80BA\"\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis dataKey=\"clicks\" />\r\n        </LineChart>\r\n      </div>\r\n      <div className=\"graph\">\r\n        <h3 className=\"user__subtitle\">Vievs</h3>\r\n        <LineChart\r\n          width={GraphSize().width}\r\n          height={GraphSize().height}\r\n          data={data}\r\n        >\r\n          <CartesianGrid vertical={false} stroke=\"#F1F1F1\" />\r\n          <Line\r\n            type=\"monotone\"\r\n            strokeWidth={4}\r\n            legendType=\"plainline\"\r\n            dataKey=\"page_views\"\r\n            stroke=\"#3A80BA\"\r\n          />\r\n          <Tooltip />\r\n          <Legend />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis dataKey=\"page_views\" />\r\n        </LineChart>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <div>UserId is not a valid number or data is absent</div>\r\n  );\r\n}\r\n",{"ruleId":"80","severity":1,"message":"81","line":30,"column":6,"nodeType":"82","endLine":30,"endColumn":18,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":20},{"ruleId":"84","severity":1,"message":"88","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'maxLimit' and 'page'. Either include them or remove the dependency array. You can also do a functional update 'setPage(p => ...)' if you only need 'page' in the 'setPage' call.","ArrayExpression",["89"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",{"desc":"90","fix":"91"},"Update the dependencies array to be: [maxLimit, page, query.page]",{"range":"92","text":"93"},[975,987],"[maxLimit, page, query.page]"]